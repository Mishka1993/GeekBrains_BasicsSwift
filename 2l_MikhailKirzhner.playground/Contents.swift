import Cocoa

<<<<<<< HEAD
//Задание №1
//Написать функцию, которая определяет, четное число или нет

let Arg1: Int = 10

if(Arg1 % 2) == 0 {
    print("Число четное")
}
else{
    print("Число нечетное")
}

//Задание %2
//Написать функцию, которая определит делится ли число без остатка на 3

let Arg2: Int = 10

if(Arg2 % 3) == 0 {
    print("Делится на 3")
}
else{
    print("Не делится на 3")
}
//Задание №3
//Создать возврастающий массив из 100 чисел

var Arg3: [Int] = []

for i in 0 ... 99 {
    Arg3.append(i)
}

//Задание №4
//Удалить из этого массива все четные числа и все числа, которые не делятся на 3

Arg3.removeAll(where: { $0 % 2 == 0 ||  $0 % 3 != 0 })
print(Arg3)

//Задание №5
//Написать функцию, которая добавляет в массив новое число Фибоначчи, и добавить при помощи нее 50 элементов

var Arg4: [Int] = [1, 1]
for i in 2 ... 50 {
    Arg4.append(Arg4[i - 1] + Arg4[i - 2])
}
print(Arg4)

//Задание №6
//Заполнить массив элементов различными простыми числами. Натуральное число, большее единицы, называется простым, если оно делится только на себя и на единицу. Для нахождения всех простых чисел не больше заданного числа n (пусть будет 100).

var Arg5: [Int] = []
for i in 0 ... 99 {
    if(Prime(n: i) == true){
        Arg5.append(i)
    }
}
print(Arg5)

func Prime(n : Int) -> Bool{
    var _b = true
    if n <= 1 {
        return false
    } else {
        for y in 2...n {
            if y == n {
                _b = true
                break
            } else if n % y == 0 {
                _b = false
                break
            } else if n % y != 0 {
            }
        }
    }
    return _b
}
=======
var greeting = "Hello, playground"
>>>>>>> Lesson_2
